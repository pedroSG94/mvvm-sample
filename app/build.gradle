apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
  compileSdkVersion 29

  defaultConfig {
    applicationId "com.pedro.mvvm"
    minSdkVersion 19
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  kapt {
    correctErrorTypes true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = "1.8"
  }

  buildFeatures {
    viewBinding = true
  }
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "androidx.core:core-ktx:1.3.1"
  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'androidx.fragment:fragment-ktx:1.2.5'
  implementation "androidx.recyclerview:recyclerview:1.1.0"
  implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
  //Retrofit
  implementation 'com.squareup.retrofit2:retrofit:2.6.0'
  implementation 'com.google.code.gson:gson:2.8.5'
  implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
  def room_version = "2.2.5"
  implementation "androidx.room:room-runtime:$room_version"
  // optional - Kotlin Extensions and Coroutines support for Room
  implementation "androidx.room:room-ktx:$room_version"
  kapt "androidx.room:room-compiler:$room_version"
  def lifecycle_version = "2.2.0"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
  // alternately - if using Java8, use the following instead of lifecycle-compiler
  implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
  //dagger hilt
  implementation "com.google.dagger:hilt-android:$dagger_version"
  kapt "com.google.dagger:hilt-android-compiler:$dagger_version"
  //viewModel injector
  implementation "androidx.hilt:hilt-lifecycle-viewmodel:$dagger_viewmodel_version"
  kapt "androidx.hilt:hilt-compiler:$dagger_viewmodel_version"
  //test
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
  testImplementation 'junit:junit:4.12'
  //dagger For instrumentation tests
  androidTestImplementation  "com.google.dagger:hilt-android-testing:$dagger_version"
  kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_version"
  //dagger For local unit tests
  testImplementation "com.google.dagger:hilt-android-testing:$dagger_version"
  kaptTest "com.google.dagger:hilt-android-compiler:$dagger_version"
}